version: "3.5"

services:
  api01: &api
    build: ./
    hostname: api01
    restart: on-failure
    healthcheck:
      test: curl --fail http://localhost:8080/healthcheck || exit 1
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s
    ulimits:
      nofile:
        soft: 100000
        hard: 100000
    environment:
      - DB_HOSTNAME=db
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "120MB"

  api02:
    <<: *api
    hostname: api02
  
  nginx:
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api01:
        condition: service_started
      api02:
        condition: service_started
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "100MB"

  db:
    image: postgres:latest
    hostname: db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=112131
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha_backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    deploy:
      resources:
        limits:
          cpus: "0.55"
          memory: "210MB"